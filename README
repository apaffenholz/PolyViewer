/***********************************************************************
 * Created by Andreas Paffenholz on 04/18/12.
 * Copyright 2012-2014 by Andreas Paffenholz.
 
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 2, or (at your option) any
 * later version: http://www.gnu.org/licenses/gpl.txt.
 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * README
 * PolyViewer
 **************************************************************************/

PolyViewer is a simple reader for files created by polymake (polymake.org) 
released under the GPL.

Building PolyViewer requires that polymake-config can be found in your path (son in particular, polymake must be installed). 
So either place this in /usr/bin, or add 

export PATH=$PATH:/path/to/your/polymake-convig

to the file 

.bash_profile

in your $HOME folder.

For this reason there is currently no precompiled version of PolyViewer: 
  Pathes are hardcoded into the project after compilation, so if your polymake is in a different location than mine it won't work.
  
  
This branch of the PolViewer project requires that the extension "poly_db" of polymake written by Silke Horn (see github) is installed and configured.

For similar reasons as above you will have to tweak some files: Most likely the path to the perl modules for MongoDB running the database and some others won't be found. Please add

use lib "/path/to/MongoDB-<version>/lib";
use lib "/path/to/boolean-<version>/lib";
use lib "/path/to/Tie-IxHash-<version>/lib";
use lib "/path/to/lib/perl5/site_perl/<perl-version>/darwin-thread-multi-2level";

with the obvious replacements (i.e. replace /path/to and <*version>) to the file apps/common/rules/main.rules in the folder of the "poly_db"-extension.




--- 

internal notes

- including libpolymake requires
  - appropriate compiler/linker flags
  - the preprocessor macro: __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES=0 to avoid conflicts with functions starting with two underscores:
     full quote from AsserMacros.h
     *	A future release of Mac OS X will no longer do this, and will require that clients move to the
     *  new macros as defined above.  However, in the interim both the new and old macros will work, unless
     *  clients define a macro __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES before this file is included
     *  in their compilations.  Clients who do not want the older macros defined can accomplish this by adding
     *    #define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
     *  at the top of their sources, or my adding -D__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES=0 to the
     *  gcc compilation options.
     
