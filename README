/***********************************************************************
 * Created by Andreas Paffenholz on 04/18/12.
 * Copyright 2012-2014 by Andreas Paffenholz.
 
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 2, or (at your option) any
 * later version: http://www.gnu.org/licenses/gpl.txt.
 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * README
 * PolyViewer
 **************************************************************************/

PolyViewer is a simple reader for files created by polymake (polymake.org) 
released under the GPL.


** BINARY DISTRIBUTION **

A first attempt for a binary distribution can be downloaded at

http://polymake.org/polytopes/paffenholz/data/polymake/mac/PolyViewer.dmg

Follow the instructions given in the INSTALL file contained in the dmg. 
This binary build is still **very** experimental (and the app still has many shortcomings I hope to fix soon). 
Please report any problems you encounter!


** COMPILING THE PROJECT **

Building and running PolyViewer requires that 
  
  libpolymake.2.12.dylib and libpolymake-apps.2.12.dylib

can be found. Further, the gmp headers are needed during compilation (during run time, 
libpolymake knows how to find them). So, in particular, you will have to install polymake first.

For building the app you will have to edit the file 

polymake.xcconfig

found in the root folder. Edit appropriately or use the run script
found under "Build Phases" by uncommenting all lines starting with "echo". This
requires that "polymake-config" can be found in your path. If this is not in a standard place, add

export PATH=$PATH:/path/to/your/polymake-config

to the file 

.bash_profile

in your $HOME folder.

-------------
  
The PolyViewer project now provides a simple interface to the extension 
"poly_db" of polymake written by Silke Horn (see github) to acces the 
polymake database. To use it you most likely have to adjust some search paths. 

During installation of poly_db for polymake you have been asked to install the
perl modules MongoDB, boolean, and Tie-IxHash. To use poly_db with PolyViewer please do
the following: 

In a terminal do

echo export | launchctl

and check whether there is a line starting with PERL5LIB. If there is, please copy all paths 
following it (after the first =" and until before the semi-colon before export PERL5LIB). Copy this 
in front of the paths (and add a colon) in the following command.

Now make the appropriate changes to the paths in the following command (and add any paths copied in the previous step!) 
and run this in a terminal:

echo setenv PERL5LIB /path/to/MongoDB-<version>/lib:/path/to/boolean-<version>/lib:/path/to/Tie-IxHash-<version>/lib:/path/to/lib/perl5/site_perl/<perl-version>/darwin-thread-multi-2level | launchctl

You can change this any time by invoking the same command with a different list of paths, and 
remove the variable completely by issuing

echo unsetenv PERL5LIB | launchctl


-------------

PolyViewer now partially supports computation of new properties: 

- right click on any property at the same level as the one you want to 
    compute and choose "Compute property". Enter the property you want to have.
- right click on a property with subproperties and choose "Add subproperty to object" and
    enter the name of a property you want to add to the current subproperty

This currently only works for non-object properties. As a workaround 
to add e.g. a Hasse diagram enter "HASSE_DIAGRAM.ADJACENCY" 
(or any other property of the Hasse diagram you are interested in).
Any string the polymake command "give" accepts that does not return a perl::Object should work.

Note that for technical reasons the interface currently does not immediately select the new
property in the window (polymake might add further properties during the computation, so
we have to initiate a complete reload of the properties and loose track of the current one).


--------------

Acknowledgements:
Silke Horn has contributed several pieces of code for this app, has developed the polymake database extension
that this app interfaces (see her github page) and has contributed the nice icons for polymake data files!

A more thorough integration of the polymake database into this app is planned.


--- 

internal notes

- including libpolymake requires
  - appropriate compiler/linker flags
  - the preprocessor macro: __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES=0 to avoid conflicts with functions starting with two underscores:
     full quote from AssertMacros.h
     *	A future release of Mac OS X will no longer do this, and will require that clients move to the
     *  new macros as defined above.  However, in the interim both the new and old macros will work, unless
     *  clients define a macro __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES before this file is included
     *  in their compilations.  Clients who do not want the older macros defined can accomplish this by adding
     *    #define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
     *  at the top of their sources, or my adding -D__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES=0 to the
     *  gcc compilation options.
     
